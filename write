#!/usr/bin/env python

import random
import json 
import base64
import time
from azure.identity import DefaultAzureCredential
from azure.mgmt.storage import StorageManagementClient
from azure.storage.queue import QueueClient
from settings import AZURE_SUBSCRIPTION_ID, RESOURCE_GROUP, AZURE_STORAGE_ACCOUNT, QUEUE_NAME

credential = DefaultAzureCredential()
storage_client = StorageManagementClient(credential, AZURE_SUBSCRIPTION_ID)
storage_queue_url = f"https://{AZURE_STORAGE_ACCOUNT}.queue.core.windows.net"
storage_account_key = storage_client.storage_accounts.list_keys(RESOURCE_GROUP, AZURE_STORAGE_ACCOUNT).keys[0].value
words = [word.strip() for word in open('/usr/share/dict/words').readlines()]

def send_message(message):
    """
    Sends a message to a storage queue.

    Args:
        message (str): The message to be sent.

    Returns:
        None
        
    Note: This function assumes that the variables `storage_queue_url`, `QUEUE_NAME`, and `storage_account_key`
    have been defined with the appropriate values before calling this function.
    """
    queue_client = QueueClient(
        account_url=storage_queue_url, 
        queue_name=QUEUE_NAME,
        credential=storage_account_key
    )
    base64_message = encode_message(message)
    queue_client.send_message(base64_message)

def encode_message(message):
    """
    Encodes the given message using UTF-8 encoding and returns the base64 encoded message.

    Args:
        message (str): The message to be encoded.

    Returns:
        str: The base64 encoded message.
    """
    message_bytes = message.encode('utf-8')
    base64_bytes = base64.b64encode(message_bytes)
    base64_message = base64_bytes.decode('utf-8')
    return base64_message

def main():
    """
    Sends messages to a storage queue at regular intervals.

    This function generates a random amount and topic, creates a JSON message
    with the generated content, and sends the message to a storage queue. It
    then waits for 5 seconds before repeating the process.

    Returns:
        None
    """
    while True:
        amount = random.uniform(0.0, 1000)
        content = {
            'topic': random.choice(words),
            'value': "%.2f" % amount
        }
        json_message = json.dumps(content)
        send_message(json_message)
        print(f"Sent message: {json.dumps(json.loads(json_message), indent=4)}")
        time.sleep(5)

if __name__ == "__main__":
    main()
